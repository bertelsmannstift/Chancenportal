<?php
namespace UI\UiProvider\Utility;

/***
 *
 * This file is part of the "u+i | Provider" Extension for TYPO3 CMS.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 *  (c) 2018 Sebastian Swan <seswan@uandi.com>, www.uandi.com
 *
 ***/

/**
 * ExtensionManagementUtility
 */
class ExtensionManagementUtility extends \TYPO3\CMS\Core\Utility\ExtensionManagementUtility
{
    /**
     * Remove field from TCA definition
     *
     * @param string $table
     * @param string $field
     * @param string $typeList
     *
     * Usage
     * -----
     * ExtensionManagementUtility::removeFromAllTCAtypes('pages', 'header', '1')
     */
    public static function removeFromAllTCAtypes($table = '', $field = '', $typeList = '')
    {
        if(!empty($table) && !empty($field) && isset($GLOBALS['TCA'][$table])) {
            foreach($GLOBALS['TCA'][$table]['types'] as $type => $definition) {
                if(empty($typeList) || in_array($type, explode(',', $typeList))) {
                    if(strpos($GLOBALS['TCA'][$table]['types'][$type]['showitem'], $field.',') === 0) {
                        $GLOBALS['TCA'][$table]['types'][$type]['showitem'] = trim(substr($GLOBALS['TCA'][$table]['types'][$type]['showitem'], strlen($field.',')));
                    } else {
                        $GLOBALS['TCA'][$table]['types'][$type]['showitem'] = preg_replace(
                            '/[, ]+'.preg_quote($field, '/').'/',
                            '',
                            $GLOBALS['TCA'][$table]['types'][$type]['showitem']
                        );
                    }
                }
            }
        }
    }

    /**
     * Remove field from palette definition
     *
     * @param string $table
     * @param string $palette
     * @param string $field
     *
     * Usage
     * -----
     * ExtensionManagementUtility::removeFromPalette('pages', 'title', 'header')
     */
    public static function removeFromPalette($table = '', $palette = '', $field = '')
    {
        if(!empty($table) && !empty($palette) && !empty($field) && isset($GLOBALS['TCA'][$table]['palettes'][$palette]['showitem'])) {
            $GLOBALS['TCA'][$table]['palettes'][$palette]['showitem'] = preg_replace(
                '/[, ]+'.preg_quote($field, '/').'/',
                '',
                $GLOBALS['TCA'][$table]['palettes'][$palette]['showitem']
            );
        }
    }

    /**
     * Fix broken wizard icons for plugins generated by extension builder
     *
     * @param $icons
     * @param $extKey
     * @deprecated Deprecated in Version 9 of ui_provider. Will be removed in Version 10
     */
    public static function fixWizardPluginIcons($icons, $extKey)
    {
        $iconRegistry = \TYPO3\CMS\Core\Utility\GeneralUtility::makeInstance(\TYPO3\CMS\Core\Imaging\IconRegistry::class);

        /**
         * Register Icons
         */
        $pageTsConfigString = '';
        foreach($icons as $iconKey => $icon) {
            $iconRegistry->registerIcon(
                $extKey.'-plugin-' . $iconKey,
                $icon['class'],
                ['source' => $icon['source']]
            );

            $pageTsConfigString .= $iconKey.".iconIdentifier = ".$extKey."-plugin-".$iconKey."\n";
        }

        /**
         * Fix broken wizard icons
         */
        \TYPO3\CMS\Core\Utility\ExtensionManagementUtility::addPageTSConfig('
            mod {
                wizards.newContentElement.wizardItems.plugins {
                    elements {
                        '.$pageTsConfigString.'
                    }
                }
            }
        ');
    }
}